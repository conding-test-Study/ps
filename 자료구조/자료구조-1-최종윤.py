#답지 찾아봄
#6198
#구현이라고 생각하고 그냥 풀기시작했다. 시간초과가 발생했다.
#빌딩을 앞에서 부터 하나씩 뒤에 더 큰게 올 때까지 cnt +1하면서 셌던것 같다 최악의 경우 n^2 나올듯

#배열의 길이를 이용하여 배열에 앞에 있는 요소보다 작은게 오면 
#참고가능해지는 빌딩이 앞에 있던 빌딩 수만큼 증가한다. 
#앞에있는것들은 다 큰 것 내림차순으로 있기 때문

#작은것하다 큰것 나오면 그냥 앞에 작은것을 뺴버렸기 때문 (3을 뺸다)  이는 앞으로 아무것도 참고 불가하기 때문 (3앞에 7(더 큰 것)이 와서 뒤에 뭐가와도 못봄)
# +  x  
# 10 3 7!

# +  + 
# 10 7 4!

#스택이란 키워드로 한번 풀어볼까 했지만 풀이법을 떠올리진 못했다. 
#스택 같을 때 하나 추가됐을 때 세고자 하는 것이 길이와 연관있는지 예시 보면서 식 생각해보기?
#이거를 근데 생각할수가 있나 비슷한 유형이 나올거라 생각하고 일단 코드 이해만 해보았다.  비슷한 유형 접근법을 사용해볼수도 있으니까??


## 입력값
buildings = []
for i in range(int(input())): buildings.append(int(input()))

# 스택, 결과변수
stack = []
result = 0

for b in buildings:
  while stack and stack[-1]<=b:
    stack.pop()
  stack.append(b)

  result += len(stack)-1

print(result)
